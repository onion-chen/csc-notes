import{_ as a,c as e,e as i,d as t,r as c,o as p}from"./app-wBMFSTMV.js";const l="/csc-notes/assets/%E7%A4%BA%E4%BE%8B%E8%A7%A3%E9%87%8A-5ueemiQW.png",o={};function r(d,n){const s=c("Utterances");return p(),e("div",null,[n[0]||(n[0]=i(`<h1 id="c语言概述" tabindex="-1"><a class="header-anchor" href="#c语言概述"><span>C语言概述</span></a></h1><p>C程序时怎么样的，初见C程序会感觉奇怪，程序中有许多 {} cp-&gt;tort *ptr++等这样的符号，然后在学习C的过程中，对这些符号和C语言特有的其他符号会越来越熟悉。</p><h2 id="_1-简单的c程序示例" tabindex="-1"><a class="header-anchor" href="#_1-简单的c程序示例"><span>1. 简单的C程序示例</span></a></h2><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c"><pre><code><span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span></span>
<span class="line"><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">int</span> num<span class="token punctuation">;</span> <span class="token comment">/* 声明一个变量 num */</span></span>
<span class="line">    num <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;Hello World!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;computer. \\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;I am %d years old.&quot;</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-2-示例解释" tabindex="-1"><a class="header-anchor" href="#_1-2-示例解释"><span>1.2 示例解释</span></a></h3><div style="text-align:center;"><img src="`+l+`"></div><h3 id="_1-3-快速概要" tabindex="-1"><a class="header-anchor" href="#_1-3-快速概要"><span>1.3 快速概要</span></a></h3><p>#include&lt;stdio.h&gt;</p><p>该行时告诉编译器把 <strong>stdio.h</strong> 中的内容包含在当前程序中。<strong>stdio.h</strong> 是C编译器软件包的标准部分，它提供键盘输入和屏幕输出支持。</p><p>int main (void)</p><p>C程序包含一个或多个函数，它们是C程序的基本模块。程序中有一个名为 <strong>main</strong> 的函数。圆括号表明 <strong>main</strong> 是一个函数名。 int 表明main函数返回一个整数，void表明main不带任何参数。</p><p>/* 声明一个变量 */</p><p>注释在 /* 和 */两个符号之间，这些注释能提供程序的可读性，编译器在编译的时候会忽略它们。</p><p>{</p><pre><code>    左花括号标识函数定义开始，右花括号表示函数定义结束。

    int num;  表明使用一个名为num的变量，而且num是int（整数）类型。

    num = 1; 把1赋值给名为num的变量

    printf(&quot;Hello World!&quot;); 调用printf函数，在屏幕上输出 **Hello World**。

    printf(&quot;computer. \\n&quot;); \\n 会告诉计算机另起一行，把光标移至下一行。

    printf(&quot;I am %d years old.&quot;, 18); 最后调用的printf %d告诉计算机输出的时候这个占位符使用18替换。
</code></pre><p>}</p><h3 id="_1-4-详细介绍" tabindex="-1"><a class="header-anchor" href="#_1-4-详细介绍"><span>1.4 详细介绍</span></a></h3><h4 id="_1-4-1-include指定和头文件" tabindex="-1"><a class="header-anchor" href="#_1-4-1-include指定和头文件"><span>1.4.1 #include指定和头文件</span></a></h4><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c"><pre><code><span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdio.h&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这是程序的第一行，**#include&lt;stdio.h&gt;**的作用相当于把 stdio.h 文件中的所有内容输入到该行所在的位置。实际上这是一种“拷贝-粘贴”的操作。include文件提供了一种方便的途径共享许多程序共有的信息。</p><p>#include这段代码是一条C预处理器指令，通常，C编译器在编译之前会对源代码做一些准备工作，即预处理。</p><p>所有C编译器软件包都提供 stdio.h 文件。该文件包含了供编译器使用的输入和输出函数信息。该文件名的含义是标准输入/输出头文件。</p><p>在大多数情况下，头文件包含了编译器创建最终可执行程序用到的信息。例如，头文件中可以定义一些常量，或者指明函数名和如何使用它们。但是，函数的实际代码在一个预编译代码的库文件中。简而言之，就是头文件帮助编译器把程序正确的组合在一起。</p><div class="hint-container tip"><p class="hint-container-title">？ 为什么不内置输入和输出</p><p>并非所有的程序都会用到I/O（输入/输出）包，轻装上阵表现了C语言的哲学。这是这种经济适用资源的原则，使得C语言成为流行的嵌入式编程语言。</p></div><h4 id="_1-4-2-main-函数" tabindex="-1"><a class="header-anchor" href="#_1-4-2-main-函数"><span>1.4.2 main()函数</span></a></h4><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c"><pre><code><span class="line"><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>C程序总是从main()函数开始执行。int是main函数的返回类型。这表名main函数的返回值是整数。</p><p>通常函数名后面的圆括号包含一些传入函数的信息。该例中没有传递任何信息。因此，括号中是void。</p><h4 id="_1-4-3-注释" tabindex="-1"><a class="header-anchor" href="#_1-4-3-注释"><span>1.4.3 注释</span></a></h4><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c"><pre><code><span class="line"><span class="token comment">// 单行注释</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">/*</span>
<span class="line">多行注释1</span>
<span class="line">多行注释2</span>
<span class="line">*/</span> </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,30)),t(s)])}const h=a(o,[["render",r]]),m=JSON.parse('{"path":"/notes/underlying/C%E8%AF%AD%E8%A8%80/C%E8%AF%AD%E8%A8%80%E6%A6%82%E8%BF%B0.html","title":"C语言概述","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"1. 简单的C程序示例","slug":"_1-简单的c程序示例","link":"#_1-简单的c程序示例","children":[{"level":3,"title":"1.2 示例解释","slug":"_1-2-示例解释","link":"#_1-2-示例解释","children":[]},{"level":3,"title":"1.3 快速概要","slug":"_1-3-快速概要","link":"#_1-3-快速概要","children":[]},{"level":3,"title":"1.4 详细介绍","slug":"_1-4-详细介绍","link":"#_1-4-详细介绍","children":[]}]}],"git":{"updatedTime":1750307720000,"contributors":[{"name":"chenshicong","username":"chenshicong","email":"chenshicong666@qq.com","commits":2,"url":"https://github.com/chenshicong"},{"name":"onion-chen","username":"onion-chen","email":"chenshicong666@qq.com","commits":1,"url":"https://github.com/onion-chen"}],"changelog":[{"hash":"70fb99ce4f08296bac27dd50bd4f7ce9ce2de2d6","time":1750307720000,"email":"chenshicong666@qq.com","author":"onion-chen","message":"加法 减法 操作符"},{"hash":"4f60508f64ff28b61931af9fd8ac15fdb27d33cd","time":1749285866000,"email":"chenshicong666@qq.com","author":"chenshicong","message":"C语言概述"},{"hash":"f4afdc2824740e828a1fa5df20215911737a1081","time":1749282076000,"email":"chenshicong666@qq.com","author":"chenshicong","message":"初识C语言"}]},"filePathRelative":"notes/underlying/C语言/C语言概述.md"}');export{h as comp,m as data};
